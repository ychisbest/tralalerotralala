---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { LOCALES, type Lang, useTranslations } from "@/i18n";
import Layout from "@/layouts/Base.astro";
import { getRelativeLocaleUrl } from "astro:i18n";

export async function getStaticPaths() {
  const games = await getCollection("game");
  const lang = LOCALES;

  const result = Object.keys(lang).map((slang) => {
    return games.map((game) => {
      const lang = slang;
      const id = game.data.slug;
      return { params: { lang, id } };
    });
  });
  return result.flat();
}

const { lang } = Astro.params;
const currentLang = lang as Lang;
const t = useTranslations(currentLang);

const game = (await getCollection("game").then((games) =>
  games.find((game) => game.data.slug === Astro.params.id),
)) as any;

const gameDescription =
  game.data.description[currentLang] || game.data.description.en;
const gameInstructions =
  game.data.instructions[currentLang] || game.data.instructions.en;
---

<Layout>
  <div class="container mx-auto px-4 py-6 max-w-5xl">
    <!-- Back button with animation -->
    <a
      href={getRelativeLocaleUrl(currentLang, "/games")}
      class="flex items-center gap-2 text-gray-600 mb-6 group w-fit"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        class="transition-transform group-hover:-translate-x-1"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"
        ></path>
      </svg>
      <span
        >{
          t({
            en: "Back to Games",
            es: "Volver a Juegos",
            ar: "العودة إلى الألعاب",
            pt: "Voltar aos Jogos",
            fr: "Retour aux Jeux",
            ru: "Назад к играм",
            "zh-cn": "返回游戏",
            ja: "ゲームに戻る",
          })
        }</span
      >
    </a>

    <!-- Game title with icon -->
    <div class="flex items-center gap-3 mb-6">
      <div
        class="p-2 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-lg shadow-md"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 512 512"
          ><path
            fill="white"
            d="M155.084 125.945q-.69-.001-1.397.034c-5.646.285-12.097 2.464-20.707 8.204c-21.824 14.55-51.912 60.395-67.834 110.005c-15.92 49.61-18.046 102.25 5.936 132.966c4.142 5.306 13.387 8.93 23.756 8.846c10.216-.084 20.682-3.838 26.482-9.44c1.022-1.47 9.296-13.336 21.39-27.404c12.863-14.96 28.716-31.686 45.835-38.777c41.863-17.34 93.024-17.34 134.887 0c17.118 7.092 32.97 23.818 45.834 38.778c12.095 14.068 20.37 25.933 21.39 27.404c5.8 5.602 16.267 9.356 26.483 9.44c10.368.085 19.612-3.54 23.755-8.846c23.973-30.704 21.885-83.575 5.978-133.287s-46.054-95.526-67.783-109.624c-11.498-7.46-19.198-8.73-26.285-7.64c-7.088 1.093-14.347 5.197-22.866 11.07c-17.038 11.746-38.898 30.02-73.952 30.02c-35.212 0-57.115-18.514-74.13-30.356c-8.505-5.92-15.73-10.025-22.743-11.078a27.6 27.6 0 0 0-4.03-.317zm212.904 48.75a16 16 0 0 1 16 16a16 16 0 0 1-16 16a16 16 0 0 1-16-16a16 16 0 0 1 16-16M135 183h18v32h32v18h-32v32h-18v-32h-32v-18h32zm200.988 23.695a16 16 0 0 1 16 16a16 16 0 0 1-16 16a16 16 0 0 1-16-16a16 16 0 0 1 16-16m64 0a16 16 0 0 1 16 16a16 16 0 0 1-16 16a16 16 0 0 1-16-16a16 16 0 0 1 16-16m-32 32a16 16 0 0 1 16 16a16 16 0 0 1-16 16a16 16 0 0 1-16-16a16 16 0 0 1 16-16m-160 7h32v18h-32zm64 0h27.897v18h-27.897z"
          ></path></svg
        >
      </div>
      <h1 class="text-3xl font-bold">{game.data.title}</h1>
    </div>

    <!-- Game iframe with animation and notion-like container -->
    <div
      class="relative border border-gray-200 rounded p-4 bg-white shadow-[0_0_0_1px_rgba(15,15,15,0.05),0_3px_6px_rgba(15,15,15,0.1),0_9px_24px_rgba(15,15,15,0.2)] "
    >


      <!-- Game iframe container with aspect ratio -->
      <div class="relative pt-[56.25%] bg-gray-900">
        <iframe
          src={game.data.url}
          class="absolute inset-0 w-full h-full"
          loading="lazy"
          allow="fullscreen; accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          title={game.data.title}></iframe>
      </div>
    </div>
    <!-- Full screen button -->
    <div class="flex justify-center mt-4">
      <button
        id="fullscreenBtn"
        class="flex items-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md transition-colors duration-200 shadow-sm"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="18"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5"
          ></path>
        </svg>
        <span
          >{
            t({
              en: "Play Fullscreen",
              es: "Jugar Pantalla Completa",
              ar: "اللعب ملء الشاشة",
              pt: "Jogar em Tela Cheia",
              fr: "Jouer en Plein Écran",
              ru: "Играть в Полный Экран",
              "zh-cn": "全屏游戏",
              ja: "全画面でプレイ",
            })
          }</span
        >
      </button>
    </div>

    <!-- Game info cards with subtle hover effects -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 my-8">
      <div
        class="border border-gray-200 rounded p-4 bg-white shadow-[0_0_0_1px_rgba(15,15,15,0.05),0_3px_6px_rgba(15,15,15,0.1),0_9px_24px_rgba(15,15,15,0.2)]"
      >
        <div class="flex items-center gap-2 text-gray-700 mb-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14"></path>
          </svg>
          <h3 class="font-medium">
            {
              t({
                en: "Category",
                es: "Categoría",
                ar: "الفئة",
                pt: "Categoria",
                fr: "Catégorie",
                ru: "Категория",
                "zh-cn": "类别",
                ja: "カテゴリー",
              })
            }
          </h3>
        </div>
        <p>{game.data.category}</p>
      </div>

      <div
        class="border border-gray-200 rounded p-4 bg-white shadow-[0_0_0_1px_rgba(15,15,15,0.05),0_3px_6px_rgba(15,15,15,0.1),0_9px_24px_rgba(15,15,15,0.2)]"
      >
        <div class="flex items-center gap-2 text-gray-700 mb-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
            ></path>
          </svg>
          <h3 class="font-medium">
            {
              t({
                en: "Instructions",
                es: "Instrucciones",
                ar: "تعليمات",
                pt: "Instruções",
                fr: "Instructions",
                ru: "Инструкции",
                "zh-cn": "说明",
                ja: "手順",
              })
            }
          </h3>
        </div>
        <p>{gameInstructions}</p>
      </div>

      <div
        class="border border-gray-200 rounded p-4 bg-white shadow-[0_0_0_1px_rgba(15,15,15,0.05),0_3px_6px_rgba(15,15,15,0.1),0_9px_24px_rgba(15,15,15,0.2)]"
      >
        <div class="flex items-center gap-2 text-gray-700 mb-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
            ></path>
          </svg>
          <h3 class="font-medium">
            {
              t({
                en: "Tags",
                es: "Etiquetas",
                ar: "العلامات",
                pt: "Tags",
                fr: "Tags",
                ru: "Теги",
                "zh-cn": "标签",
                ja: "タグ",
              })
            }
          </h3>
        </div>
        <div class="flex flex-wrap gap-2">
          {
            game.data.tags
              .split(", ")
              .map((tag: string) => (
                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">
                  {tag}
                </span>
              ))
          }
        </div>
      </div>
    </div>

    <!-- Description -->
    <div
      class="border border-gray-200 rounded p-4 bg-white shadow-[0_0_0_1px_rgba(15,15,15,0.05),0_3px_6px_rgba(15,15,15,0.1),0_9px_24px_rgba(15,15,15,0.2)]"
    >
      <div class="flex items-center gap-2 text-gray-700 mb-3">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="18"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M4 6h16M4 12h16M4 18h7"></path>
        </svg>
        <h2 class="text-xl font-medium">
          {
            t({
              en: "Description",
              es: "Descripción",
              ar: "الوصف",
              pt: "Descrição",
              fr: "Description",
              ru: "Описание",
              "zh-cn": "描述",
              ja: "説明",
            })
          }
        </h2>
      </div>
      <p class="text-gray-700">{gameDescription}</p>
    </div>
  </div>
</Layout>

<script is:inline>
  // Fullscreen functionality
  const fullscreenBtn = document.getElementById("fullscreenBtn");
  const gameIframe = document.querySelector("iframe");

  if (fullscreenBtn && gameIframe) {
    fullscreenBtn.addEventListener("click", () => {
      try {
        if (gameIframe.requestFullscreen) {
          gameIframe.requestFullscreen();
        } else if (gameIframe.mozRequestFullScreen) {
          gameIframe.mozRequestFullScreen();
        } else if (gameIframe.webkitRequestFullscreen) {
          gameIframe.webkitRequestFullscreen();
        } else if (gameIframe.msRequestFullscreen) {
          gameIframe.msRequestFullscreen();
        }
      } catch (e) {
        console.error("Fullscreen request failed:", e);

        // Fallback - open in new tab
        window.open(gameIframe.src, "_blank");
      }
    });
  }

  expandBtn.addEventListener("click", () => {
      try {
        if (gameIframe.requestFullscreen) {
          gameIframe.requestFullscreen();
        } else if (gameIframe.mozRequestFullScreen) {
          gameIframe.mozRequestFullScreen();
        } else if (gameIframe.webkitRequestFullscreen) {
          gameIframe.webkitRequestFullscreen();
        } else if (gameIframe.msRequestFullscreen) {
          gameIframe.msRequestFullscreen();
        }
      } catch (e) {
        console.error("Fullscreen request failed:", e);

        // Fallback - open in new tab
        window.open(gameIframe.src, "_blank");
      }
    });
  

  // Add entrance animations
  document.addEventListener("DOMContentLoaded", () => {
    const elements = document.querySelectorAll(".container > div");
    elements.forEach((el, index) => {
      el.style.opacity = "0";
      el.style.transform = "translateY(10px)";
      el.style.transition = "opacity 0.5s ease, transform 0.5s ease";

      setTimeout(() => {
        el.style.opacity = "1";
        el.style.transform = "translateY(0)";
      }, 100 * index);
    });
  });
</script>
